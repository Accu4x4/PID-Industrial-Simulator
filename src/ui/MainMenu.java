/*
 * PID_Industrial_Simulator Copyright Batzonis Constantinos
 */
package ui;

import arduino.*;
import com.fazecast.jSerialComm.SerialPort;
import communication.GraphWorker;
import communication.LocalSettings;
import graph.TimeGraph;
import java.awt.CardLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author dinob
 */
public class MainMenu extends javax.swing.JFrame {

    private LocalSettings lc = new LocalSettings();
    private Arduino myArduino;
    private SerialPort comPort;    
    private final TimeGraph graph;
    private GraphWorker gw;
    private boolean isConnected = false;
    
    /**
     * Creates new form MainMenu
     */
    public MainMenu() { 
        initComponents();
        graph = new TimeGraph("Time Plot");
        graphPanel.add(graph.getGraphPanel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainBackgroundPanel = new javax.swing.JPanel();
        graphPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        mainControlPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        modeOneControlPanel = new javax.swing.JPanel();
        mAWriteTextA = new javax.swing.JTextField();
        executeButtonA = new javax.swing.JButton();
        mAWriteTextB = new javax.swing.JTextField();
        executeButtonB = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        channelOneLabel = new javax.swing.JLabel();
        channelTwoLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        channelOneIn = new javax.swing.JLabel();
        channelTwoIn = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        setupMenu = new javax.swing.JMenu();
        connectionMenu = new javax.swing.JMenuItem();
        modeSelectionMenu = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenu = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        setHardware = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ui/Bundle"); // NOI18N
        setTitle(bundle.getString("MainMenu.title")); // NOI18N

        graphPanel.setLayout(new java.awt.BorderLayout());

        controlPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/icons8-cancel-24.png"))); // NOI18N
        jLabel1.setText(bundle.getString("MainMenu.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout mainControlPanelLayout = new javax.swing.GroupLayout(mainControlPanel);
        mainControlPanel.setLayout(mainControlPanelLayout);
        mainControlPanelLayout.setHorizontalGroup(
            mainControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        mainControlPanelLayout.setVerticalGroup(
            mainControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(342, Short.MAX_VALUE))
        );

        controlPanel.add(mainControlPanel, "mainControlPanel");

        mAWriteTextA.setText(bundle.getString("MainMenu.mAWriteTextA.text")); // NOI18N
        mAWriteTextA.setToolTipText(bundle.getString("MainMenu.mAWriteTextA.toolTipText")); // NOI18N
        mAWriteTextA.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mAWriteTextA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mAWriteTextAKeyTyped(evt);
            }
        });

        executeButtonA.setText(bundle.getString("MainMenu.executeButtonA.text")); // NOI18N
        executeButtonA.setToolTipText(bundle.getString("MainMenu.executeButtonA.toolTipText")); // NOI18N
        executeButtonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonAActionPerformed(evt);
            }
        });

        mAWriteTextB.setText(bundle.getString("MainMenu.mAWriteTextB.text")); // NOI18N
        mAWriteTextB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mAWriteTextB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mAWriteTextBKeyTyped(evt);
            }
        });

        executeButtonB.setText(bundle.getString("MainMenu.executeButtonB.text")); // NOI18N
        executeButtonB.setToolTipText(bundle.getString("MainMenu.executeButtonB.toolTipText")); // NOI18N
        executeButtonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonBActionPerformed(evt);
            }
        });

        channelOneLabel.setText(bundle.getString("MainMenu.channelOneLabel.text")); // NOI18N

        channelTwoLabel.setText(bundle.getString("MainMenu.channelTwoLabel.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText(bundle.getString("MainMenu.jLabel2.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText(bundle.getString("MainMenu.jLabel3.text")); // NOI18N

        channelOneIn.setBackground(new java.awt.Color(255, 255, 255));
        channelOneIn.setForeground(new java.awt.Color(255, 51, 51));
        channelOneIn.setText(bundle.getString("MainMenu.channelOneIn.text")); // NOI18N
        channelOneIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        channelOneIn.setOpaque(true);

        channelTwoIn.setBackground(new java.awt.Color(255, 255, 255));
        channelTwoIn.setForeground(new java.awt.Color(255, 51, 51));
        channelTwoIn.setText(bundle.getString("MainMenu.channelTwoIn.text")); // NOI18N
        channelTwoIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        channelTwoIn.setOpaque(true);
        channelTwoIn.setPreferredSize(new java.awt.Dimension(40, 20));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText(bundle.getString("MainMenu.jLabel4.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText(bundle.getString("MainMenu.jLabel5.text")); // NOI18N

        javax.swing.GroupLayout modeOneControlPanelLayout = new javax.swing.GroupLayout(modeOneControlPanel);
        modeOneControlPanel.setLayout(modeOneControlPanelLayout);
        modeOneControlPanelLayout.setHorizontalGroup(
            modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(modeOneControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(channelOneLabel)
                        .addComponent(channelTwoLabel)
                        .addGroup(modeOneControlPanelLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(channelOneIn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(modeOneControlPanelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(mAWriteTextA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(executeButtonA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(executeButtonB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modeOneControlPanelLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(channelTwoIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modeOneControlPanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(mAWriteTextB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(82, 82, 82))
        );
        modeOneControlPanelLayout.setVerticalGroup(
            modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modeOneControlPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(channelOneLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mAWriteTextA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(executeButtonA)
                .addGap(12, 12, 12)
                .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(channelOneIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(channelTwoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mAWriteTextB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(executeButtonB)
                .addGap(11, 11, 11)
                .addGroup(modeOneControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(channelTwoIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
        );

        controlPanel.add(modeOneControlPanel, "modeOneControlPanel");

        javax.swing.GroupLayout mainBackgroundPanelLayout = new javax.swing.GroupLayout(mainBackgroundPanel);
        mainBackgroundPanel.setLayout(mainBackgroundPanelLayout);
        mainBackgroundPanelLayout.setHorizontalGroup(
            mainBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBackgroundPanelLayout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainBackgroundPanelLayout.setVerticalGroup(
            mainBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainBackgroundPanelLayout.createSequentialGroup()
                .addGroup(mainBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainBackgroundPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(80, 80, 80))
        );

        setupMenu.setText(bundle.getString("MainMenu.setupMenu.text")); // NOI18N
        setupMenu.setToolTipText(bundle.getString("MainMenu.setupMenu.toolTipText")); // NOI18N

        connectionMenu.setText(bundle.getString("MainMenu.connectionMenu.text")); // NOI18N
        connectionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectionMenuActionPerformed(evt);
            }
        });
        setupMenu.add(connectionMenu);

        modeSelectionMenu.setText(bundle.getString("MainMenu.modeSelectionMenu.text")); // NOI18N
        modeSelectionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeSelectionMenuActionPerformed(evt);
            }
        });
        setupMenu.add(modeSelectionMenu);
        setupMenu.add(jSeparator1);

        exitMenu.setText(bundle.getString("MainMenu.exitMenu.text")); // NOI18N
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        setupMenu.add(exitMenu);

        menuBar.add(setupMenu);

        settingsMenu.setText(bundle.getString("MainMenu.settingsMenu.text")); // NOI18N
        settingsMenu.setToolTipText(bundle.getString("MainMenu.settingsMenu.toolTipText")); // NOI18N

        setHardware.setText(bundle.getString("MainMenu.setHardware.text")); // NOI18N
        setHardware.setToolTipText(bundle.getString("MainMenu.setHardware.toolTipText")); // NOI18N
        setHardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setHardwareActionPerformed(evt);
            }
        });
        settingsMenu.add(setHardware);

        menuBar.add(settingsMenu);

        aboutMenu.setText(bundle.getString("MainMenu.aboutMenu.text")); // NOI18N
        aboutMenu.setToolTipText(bundle.getString("MainMenu.aboutMenu.toolTipText")); // NOI18N
        menuBar.add(aboutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainBackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainBackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        if(isConnected){
            this.myArduino.serialWrite("Q");
            this.myArduino.closeConnection();           
        }
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed
    /* MenuBar action when Connection is selected*/
    private void connectionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectionMenuActionPerformed
        if(this.connectionMenu.getText().equals("Connect")){
            ArduinoConnection arduinoConnection = new ArduinoConnection(this, true);
            arduinoConnection.setLocationRelativeTo(this);
            arduinoConnection.setVisible(true);
            if(arduinoConnection.getReturnStatus() == 1 && arduinoConnection.isConnected){
                this.isConnected = true;
                this.connectionMenu.setText("Disconnect");
                this.myArduino = arduinoConnection.myArduino;
                this.comPort = arduinoConnection.comPort;
                jLabel1.setText("Connected");
                jLabel1.setIcon(new ImageIcon(getClass().getResource("/resource/icons/icons8-ok-24.png")));
            }            
        }
        else if(this.connectionMenu.getText().equals("Disconnect")){
            this.isConnected = false;
            this.myArduino.serialWrite("Q");
            this.myArduino.closeConnection();
            this.connectionMenu.setText("Connect");
            JOptionPane.showMessageDialog(null, "Arduino has been disconnected", "Information", JOptionPane.INFORMATION_MESSAGE);  
        }
    }//GEN-LAST:event_connectionMenuActionPerformed
    /* MenuBar action when Mode Selection is selected*/
    private void modeSelectionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeSelectionMenuActionPerformed
        if(isConnected){
            ModeSelection modeSelection = new ModeSelection(this, true);
            modeSelection.setLocationRelativeTo(this);
            modeSelection.setVisible(true);
            if(modeSelection.getReturnStatus() == 1){
                String mode = modeSelection.getSelectedMode();
                if(mode.equals("mode1")){
                    CardLayout card = (CardLayout) controlPanel.getLayout();
                    card.show(controlPanel, "modeOneControlPanel");
                    gw = new GraphWorker(myArduino, graph, channelOneIn, channelTwoIn);
                    gw.execute();
                }                   
            }
        }
        else
            JOptionPane.showMessageDialog(null, "There is no connection to arduino", "No connection", JOptionPane.ERROR_MESSAGE);             
    }//GEN-LAST:event_modeSelectionMenuActionPerformed

    private void mAWriteTextAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mAWriteTextAKeyTyped
        textKeyTyped(evt);
    }//GEN-LAST:event_mAWriteTextAKeyTyped

    private void executeButtonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonAActionPerformed
        String text = mAWriteTextA.getText();
        if(!text.equals("")){
            Double mA = Double.parseDouble(text);
            mA = (mA*(lc.getConverter_max_Value()))/(lc.getChannel_A_max_mA_out());
            int sendData = mA.intValue();
            text = "MA"+Integer.toString(sendData);
            byte[] bytes = text.getBytes();
            comPort.writeBytes(bytes, bytes.length);
            System.out.println(text);
        }
    }//GEN-LAST:event_executeButtonAActionPerformed

    private void mAWriteTextBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mAWriteTextBKeyTyped
        textKeyTyped(evt);
    }//GEN-LAST:event_mAWriteTextBKeyTyped

    private void executeButtonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonBActionPerformed
        String text = mAWriteTextB.getText();
        if(!text.equals("")){
            Double mA = Double.parseDouble(text);
            mA = (mA*(lc.getConverter_max_Value()))/(lc.getChannel_B_max_mA_out());
            int sendData = mA.intValue();
            text = "MB"+Integer.toString(sendData);
            byte[] bytes = text.getBytes();
            comPort.writeBytes(bytes, bytes.length);
            System.out.println(text);
        }
    }//GEN-LAST:event_executeButtonBActionPerformed

    private void setHardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setHardwareActionPerformed
        HardwareSettings hs = new HardwareSettings();
        hs.setLocationRelativeTo(null);
        // WindowListener to close only hs JFrame!
        hs.addWindowListener(new WindowAdapter() 
        {
            @Override
            public void windowClosing(WindowEvent we) 
            {
                hs.setDefaultCloseOperation(2); //2=dispose_on_close (X button)
            }
        });        
        hs.setVisible(true);
    }//GEN-LAST:event_setHardwareActionPerformed
   
    public void setArduino(Arduino arduino){
        myArduino = arduino;
    }
    
    /* Mode 1 from textKeyTyped Event common functions */
    private void textKeyTyped(java.awt.event.KeyEvent evt){
        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c))){
            getToolkit().beep();
            evt.consume();
        }        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JLabel channelOneIn;
    private javax.swing.JLabel channelOneLabel;
    private javax.swing.JLabel channelTwoIn;
    private javax.swing.JLabel channelTwoLabel;
    private javax.swing.JMenuItem connectionMenu;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton executeButtonA;
    private javax.swing.JButton executeButtonB;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField mAWriteTextA;
    private javax.swing.JTextField mAWriteTextB;
    private javax.swing.JPanel mainBackgroundPanel;
    private javax.swing.JPanel mainControlPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel modeOneControlPanel;
    private javax.swing.JMenuItem modeSelectionMenu;
    private javax.swing.JMenuItem setHardware;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JMenu setupMenu;
    // End of variables declaration//GEN-END:variables
}
